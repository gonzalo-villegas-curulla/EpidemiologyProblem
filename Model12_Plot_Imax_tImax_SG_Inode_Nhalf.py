{}#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Thu May  2 09:49:04 2024

@author: organ
"""

import numpy as np
import matplotlib.pylab as plt

# R = 1.045 * dh * sqrt(2)
# Inode start = N/2 ===================================


Excent = [0,0.0125,0.025,0.03,0.05,0.07,0.09,0.125,0.17,0.25,0.5,1,2,4,8]

tImax  = [123.867,87.017,81.584,90.992,84.17,90.84,83.757,86.77,87.8,93.49,80.26,89.62,83.17,83.9,74.94]

Imax   = [217.5,341,352.5,352.5,349.5,365,353,355.5,354.5,353.5,343.5,335.5,356,363,363.5]

SG     = [0.017065,0.006797,0.006797,0.006703,0.006746,0.0012408,0.00124,0.00091669,0.002326,0.0619,0.91018,1.075,0.210587,1.0596549,0.0144317]

# Excent = [0.0125,0.025,0.03,0.05,0.07,0.09,0.125,0.17,0.25,0.5,1,2,4,8]
# tImax  = [87.017,81.584,90.992,84.17,90.84,83.757,86.77,87.8,93.49,80.26,89.62,83.17,83.9,74.94]
# Imax   = [341,352.5,352.5,349.5,365,353,355.5,354.5,353.5,343.5,335.5,356,363,363.5]
# SG     = [0.006797,0.006797,0.006703,0.006746,0.0012408,0.00124,0.00091669,0.002326,0.0619,0.91018,1.075,0.210587,1.0596549,0.0144317]

plt.figure() 
plt.plot(   np.log(Excent), np.log(Imax)    ,'o' )
plt.grid()
plt.xlabel(r"Excent")
plt.ylabel(r"Imax")

plt.figure()
plt.plot(   np.log(SG), np.log(Imax)    ,'o' )
plt.grid()
plt.xlabel(r"Spectral gap")
plt.ylabel(r"Imax")

plt.figure()
plt.plot(   np.log(SG), np.log(tImax)    ,'o' )
plt.grid()
plt.xlabel(r"Spectral gap")
plt.ylabel(r"t Imax")



# %%
# R = 1.045 * dh * sqrt(2)
# Inode start = 0 ===================================

Excent = [0,0.0125,0.025,0.03,0.05,0.07,0.09,0.125,0.17,0.25,0.5,1,2,4,8]

tImax = [] 

Imax  = [] 

SG    = []

plt.figure() 
plt.plot(   np.log(Excent), np.log(Imax)    ,'o' )


plt.figure()
plt.plot(   np.log(SG), np.log(Imax)    ,'o' )

plt.figure()
plt.plot(   np.log(SG), np.log(tImax)    ,'o' )


plt.grid()
plt.xlabel(r"something")
plt.ylabel(r"something")


# %%


import numpy as np
import matplotlib.pylab as plt


# N = 2500
# R = 8dh*sqrt(2)

Excent = [0.0125,0.025,0.03,0.05,0.07,0.09,0.125,0.17,0.25,0.5,1,2,4,8]
tImax  = [108.588,122.1,98.68,125.191,117.959,106.339,105.85,124.49,99.8,106.53,106.12,113.339,100.582,95.15]
Imax   = [567.35,625.65,572.95,642.35,566.7,565.3,527.25,636.1,497.55,539.3,617.85,689.1,754.7,718.45]
SG     = [0.046789,0.046428,0.010057,0.0100574,0.01006092,0.0456958,0.05886678,0.04742,0.0499268,0.648,0.930045,0.12677917,0.12121,0.100785]
BCav   = [0.009667,0.00964,0.00963,0.0095509,0.009471,0.00944,0.0092848,0.00904878,0.00886657,0.0079817,0.00702,0.00684,0.006657,0.0065829]
BCstd  = [1.0195e-2, 1.0137e-2, 1.0117e-2, 9.9766e-3, 0.9065e-3,9.9311e-3, 1.0273e-2, 1.1271e-2, 1.2347e-2,1.4781e-2,1.5039e-2,1.4492e-2,1.4057e-2,1.3803e-2]


plt.figure()
# plt.errorbar(  np.log(BCav), np.log(Imax) ,  xerr = (BCstd) , fmt='o' )
# plt.errorbar(  np.log(BCav), np.log(tImax) ,  xerr = (BCstd) , fmt='o' )
plt.errorbar(  np.log(SG), np.log(tImax),   yerr = (BCstd) , fmt='o' )
plt.grid()
# plt.xlim((0,0.15))



# %%


import numpy as np
import matplotlib.pylab as plt

N = np.double([100,200,300,500,1000,1500,2000,700,2500,250,400,450,550,600,800])


Clus = [0.31553,0.44439,0.447137,0.445544,0.43849,0.43557,0.4359,0.43988,0.434595,0.46129,0.441718,0.437449,0.443427,0.44099,0.441129]
Clusstd =[0.3085,0.19613,0.16416,0.13536,0.131147,0.126,0.1268,0.1305,0.1268,0.19119,0.13018,0.129724,0.1347447,0.13289,0.131428]

tImax = [27.946,47.18,39,60.87,68.74,93.73,109.7,48.48,109.7,49.99,39.877,55.01,58.87,42.89,48.687]

Imax = [0.257,0.357,0.526,0.4426,0.35489,0.3618,0.2872,0.50637,0.2873,0.505,0.5325,0.4506,0.4106,0.5675,0.4919]

SG = [0.25504,0.12066,0.9219,2.7178,0.14095,0.7378,0.13334,0.8565,0.13334,0.59125,0.0417,0.711428,0.20932,0.9155,0.2845]

BC = [2.145e-2,2.8262e-2,2.3652e-2,1.7187e-2,1.184e-2, 9.231e-3, 7.11e-3, 1.4843e-2, 7.11e-3, 2.6485e-2, 2.0639e-2, 1.9163e-2, 1.688e-2, 1.599e-2, 1.368e-2]

BCstd = [3.57e-2, 3.3784e-2,3.09e-2, 2.379e-2, 1.7028e-2, 1.56e-2, 1.4e-2, 2.071e-2, 1.4e-2, 3.1397e-2, 2.771e-2, 2.562e-2, 2.1235e-2, 2.146e-2, 1.907e-2]
# =================

if 0:
    N = np.double([200,300,500,1000,1500,2000,700,2500,250,400,450,550,600,800])
    Clus = [0.44439,0.447137,0.445544,0.43849,0.43557,0.4359,0.43988,0.434595,0.46129,0.441718,0.437449,0.443427,0.44099,0.441129]
    Clusstd =[0.19613,0.16416,0.13536,0.131147,0.126,0.1268,0.1305,0.1268,0.19119,0.13018,0.129724,0.1347447,0.13289,0.131428]
    tImax = [47.18,39,60.87,68.74,93.73,109.7,48.48,109.7,49.99,39.877,55.01,58.87,42.89,48.687]
    Imax = [0.357,0.526,0.4426,0.35489,0.3618,0.2872,0.50637,0.2873,0.505,0.5325,0.4506,0.4106,0.5675,0.4919]
    SG = [0.12066,0.9219,2.7178,0.14095,0.7378,0.13334,0.8565,0.13334,0.59125,0.0417,0.711428,0.20932,0.9155,0.2845]
    BC = [2.8262e-2,2.3652e-2,1.7187e-2,1.184e-2, 9.231e-3, 7.11e-3, 1.4843e-2, 7.11e-3, 2.6485e-2, 2.0639e-2, 1.9163e-2, 1.688e-2, 1.599e-2, 1.368e-2]
    BCstd = [ 3.3784e-2,3.09e-2, 2.379e-2, 1.7028e-2, 1.56e-2, 1.4e-2, 2.071e-2, 1.4e-2, 3.1397e-2, 2.771e-2, 2.562e-2, 2.1235e-2, 2.146e-2, 1.907e-2]

if 1:
    N = np.double([300,500,1000,1500,2000,700,2500,250,400,450,550,600,800])
    Clus = [0.447137,0.445544,0.43849,0.43557,0.4359,0.43988,0.434595,0.46129,0.441718,0.437449,0.443427,0.44099,0.441129]
    Clusstd =[0.16416,0.13536,0.131147,0.126,0.1268,0.1305,0.1268,0.19119,0.13018,0.129724,0.1347447,0.13289,0.131428]
    tImax = [39,60.87,68.74,93.73,109.7,48.48,109.7,49.99,39.877,55.01,58.87,42.89,48.687]
    Imax = [0.526,0.4426,0.35489,0.3618,0.2872,0.50637,0.2873,0.505,0.5325,0.4506,0.4106,0.5675,0.4919]
    SG = [0.9219,2.7178,0.14095,0.7378,0.13334,0.8565,0.13334,0.59125,0.0417,0.711428,0.20932,0.9155,0.2845]
    BC = [2.3652e-2,1.7187e-2,1.184e-2, 9.231e-3, 7.11e-3, 1.4843e-2, 7.11e-3, 2.6485e-2, 2.0639e-2, 1.9163e-2, 1.688e-2, 1.599e-2, 1.368e-2]
    BCstd = [3.09e-2, 2.379e-2, 1.7028e-2, 1.56e-2, 1.4e-2, 2.071e-2, 1.4e-2, 3.1397e-2, 2.771e-2, 2.562e-2, 2.1235e-2, 2.146e-2, 1.907e-2]

if 0: # maybe use this 
    N = np.double([200,300,500,1000,1500,700,250,400,450,550,600,800])
    Clus = [0.44439,0.447137,0.445544,0.43849,0.43557,0.43988,0.46129,0.441718,0.437449,0.443427,0.44099,0.441129]
    Clusstd =[0.19613,0.16416,0.13536,0.131147,0.126,0.1305,0.19119,0.13018,0.129724,0.1347447,0.13289,0.131428]
    tImax = [47.18,39,60.87,68.74,93.73,48.48,49.99,39.877,55.01,58.87,42.89,48.687]
    Imax = [0.357,0.526,0.4426,0.35489,0.3618,0.50637,0.505,0.5325,0.4506,0.4106,0.5675,0.4919]
    SG = [0.12066,0.9219,2.7178,0.14095,0.7378,0.8565,0.59125,0.0417,0.711428,0.20932,0.9155,0.2845]
    BC = [2.8262e-2,2.3652e-2,1.7187e-2,1.184e-2, 9.231e-3, 1.4843e-2, 2.6485e-2, 2.0639e-2, 1.9163e-2, 1.688e-2, 1.599e-2, 1.368e-2]
    BCstd = [3.3784e-2,3.09e-2, 2.379e-2, 1.7028e-2, 1.56e-2, 2.071e-2, 3.1397e-2, 2.771e-2, 2.562e-2, 2.1235e-2, 2.146e-2, 1.907e-2]

if 0:
    N = np.double([300,500,1000,1500,700,250,400,450,550,600,800])
    Clus = [0.447137,0.445544,0.43849,0.43557,0.43988,0.46129,0.441718,0.437449,0.443427,0.44099,0.441129]
    Clusstd =[0.16416,0.13536,0.131147,0.126,0.1305,0.19119,0.13018,0.129724,0.1347447,0.13289,0.131428]
    tImax = [39,60.87,68.74,93.73,48.48,49.99,39.877,55.01,58.87,42.89,48.687]
    Imax = [0.526,0.4426,0.35489,0.3618,0.50637,0.505,0.5325,0.4506,0.4106,0.5675,0.4919]
    SG = [0.9219,2.7178,0.14095,0.7378,0.8565,0.59125,0.0417,0.711428,0.20932,0.9155,0.2845]
    BC = [2.3652e-2,1.7187e-2,1.184e-2, 9.231e-3, 1.4843e-2, 2.6485e-2, 2.0639e-2, 1.9163e-2, 1.688e-2, 1.599e-2, 1.368e-2]
    BCstd = [3.09e-2, 2.379e-2, 1.7028e-2, 1.56e-2, 2.071e-2, 3.1397e-2, 2.771e-2, 2.562e-2, 2.1235e-2, 2.146e-2, 1.907e-2]



# plt.figure()
# plt.plot( np.log(N), np.log(SG), 'o')

# %matplotlib qt5
# plt.figure()
# plt.plot( np.log(SG), np.log(Clus), 'o'  )


# plt.figure() 
# plt.plot(  np.log(SG) , np.log(Imax),'o'   )

# plt.figure() 
# plt.plot( np.log(Clus), np.log(BC), 'o'  )

# plt.figure() 
# plt.plot( (tImax), Imax, 'o' )
# plt.xlabel(r"$t(I_{max})$")
# plt.ylabel(r"$\langle I _{max}\rangle / N$")

plt.figure()
plt.errorbar( np.log(N), np.log(np.array(BC)/1), yerr = np.double(BCstd), fmt='o'   )
plt.xlabel(r"N (log)")
plt.ylabel(r"Betweenness centrality moyenne (log)")
plt.grid()
plt.savefig("Model12_Echelle_N_BetweenCentr.pdf",bbox_inches='tight')
plt.savefig("Model12_Echelle_N_BetweenCentr.eps",bbox_inches='tight')
plt.show()

plt.figure() 
plt.plot(  np.log(SG) , np.log(tImax),'o'   )
plt.xlabel(r"Spectral gap (log)")
plt.ylabel(r"$\langle t(I_{max}) \rangle$ (log)")
plt.grid()
Fit = np.polyfit( np.log(SG) , np.log(tImax) ,  1)  
pp = np.poly1d(Fit)
# plt.plot( np.log(SG) , pp(np.log(SG)), ':r'  )
plt.savefig("Model12_Echelle_SpectrGap_tImax.pdf",bbox_inches='tight')
plt.savefig("Model12_Echelle_SpectrGap_tImax.eps",bbox_inches='tight')
plt.show()





plt.figure()
plt.plot(np.log(N), (Imax), 'o')
plt.xlabel(r"N (log)")
plt.ylabel(r"$\langle I _{max}\rangle / N$ ")
plt.grid()
plt.savefig("Model12_Echelle_N_Imax.pdf",bbox_inches='tight')
plt.savefig("Model12_Echelle_N_Imax.eps",bbox_inches='tight')
plt.show()


# %%

# R = 3*dh*sqrt(2)
# Excent = 10*dh

import numpy as np
import matplotlib.pylab as plt



SG = [0.07643,0.11828,0.49288,0.95098,0.867369,1.0136,0.87899,0.662025,1.0196,0.013187,0.04042697,0.887899,0.00107496]
tImax = [28.684,40.732,43.797,43.007,50.677,51.877,56.0704,67.769,61.79,65.464,72.13,95.92,100.019]

SG = [0.07643,0.11828,0.49288,0.95098,0.867369,1.0136,0.87899,0.662025,1.0196,0.013187,0.04042697,0.887899,0.00107496,0.539807,0.09636]
tImax = [28.684,40.732,43.797,43.007,50.677,51.877,56.0704,67.769,61.79,65.464,72.13,95.92,100.019,39.14,80.572]

SG = [0.07643,0.11828,0.49288,0.95098,0.867369,1.0136,0.87899,0.662025,1.0196,0.013187,0.04042697,0.887899,0.00107496,0.539807,0.09636, 0.896714, 0.88763]
tImax = [28.684,40.732,43.797,43.007,50.677,51.877,56.0704,67.769,61.79,65.464,72.13,95.92,100.019,39.14,80.572,82.777, 75.4097]

# Reject first one
SG = [0.11828,0.49288,0.95098,0.867369,1.0136,0.87899,0.662025,1.0196,0.013187,0.04042697,0.887899,0.00107496,0.539807,0.09636, 0.896714, 0.88763]
tImax = [40.732,43.797,43.007,50.677,51.877,56.0704,67.769,61.79,65.464,72.13,95.92,100.019,39.14,80.572,82.777, 75.4097]
N = [250,350,400,500,600,700,800,850,900,1000,1500,2000,230,1200,1700,1300]

SG = [0.11828,0.49288,0.95098,0.867369,1.0136,0.87899,0.662025,1.0196,0.013187,0.04042697,0.887899,0.00107496,0.539807,0.09636, 0.896714, 0.88763,0.4049286]
tImax = [40.732,43.797,43.007,50.677,51.877,56.0704,67.769,61.79,65.464,72.13,95.92,100.019,39.14,80.572,82.777, 75.4097,77.9035]
N = [250,350,400,500,600,700,800,850,900,1000,1500,2000,230,1200,1700,1300, 1300]


plt.figure() 
plt.plot(  np.log(SG) , np.log(tImax),'o'   )
plt.xlabel(r"Spectral gap (log)")
plt.ylabel(r"$\langle t(I_{max}) \rangle$ (log)")
plt.grid()
# plt.savefig("Model12_Echelle_SpectrGap_tImax.pdf",bbox_inches='tight')
# plt.savefig("Model12_Echelle_SpectrGap_tImax.eps",bbox_inches='tight')
plt.show()


siz = N
plt.figure() 
plt.scatter( np.log(SG) , np.log(tImax), c=siz    )
plt.xlabel(r"Spectral gap (log)")
plt.ylabel(r"$\langle t(I_{max}) \rangle$ (log)")
plt.grid()
cbar = plt.colorbar()
cbar.ax.set_ylabel('Taille de population')
plt.title(r"$R = 3 \cdot dh\sqrt{2}$, $E_{xcntr} = 10 \cdot dh$")

plt.savefig("Model12_Echelle_SpectrGap_tImax_Excent_10dh.pdf",bbox_inches='tight')
plt.savefig("Model12_Echelle_SpectrGap_tImax_Excent_10dh.eps",bbox_inches='tight')
plt.show()



# %%

# R = 3*dh*sqrt(2)
# Excent = 10*dh

import numpy as np
import matplotlib.pylab as plt

SG = [0.08088,0.05959,0.03098,0.030726,0.03882,0.0268,0.026548,0.0224999,0.0211968,0.018767,0.02016,0.010588,0.008784,0.00752999]
tImax = [60.479,79.226,67.728,62.312, 98.727, 99.287,98.57,118.15,119.94,117.134,132.34,142.021,145.453,147.621]
N = [200,250,350,400,450,500,550,650,750,850,900,1500,2000,2300]


if 0:
    idx = 0
    SG = np.delete(SG, idx)
    tImax = np.delete(tImax, idx)
    N = np.delete(N, idx)

if 1: # Add a promising point
    SG = np.append(SG, 0.0137738)
    tImax = np.append(tImax, 117.5445)
    N = np.append(N, 1200)


# ## Add dubious points
if 1: # 0.01479, 77.72, 800, 
    SG = np.append(SG,       [0.05207, 0.0332196, 0.02145,  0.018107, 0.017066])
    tImax = np.append(tImax, [55.06  , 75.678   , 71.905 ,  91.72   , 109.458 ])
    N  = np.append(N,        [300    , 600      , 700    ,  950     , 1000    ])




siz = N
plt.figure() 
plt.scatter( np.log(SG) , np.log(tImax), c=siz    )
plt.xlabel(r"Spectral gap (log)")
plt.ylabel(r"$\langle t(I_{max}) \rangle$ (log)")
plt.grid()
cbar = plt.colorbar()
cbar.ax.set_ylabel('Taille de population')
plt.title(r"$R = 3 \cdot dh\sqrt{2}$, $E_{xcntr} = 0$")

plt.savefig("Model12_Echelle_SpectrGap_tImax_Excent_0.pdf",bbox_inches='tight')
plt.savefig("Model12_Echelle_SpectrGap_tImax_Excent_0.eps",bbox_inches='tight')
plt.show()



##
